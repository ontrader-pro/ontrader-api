"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/index-data";
exports.ids = ["pages/api/index-data"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Findex-data&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cindex-data.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Findex-data&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cindex-data.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_index_data_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\index-data.js */ \"(api-node)/./pages/api/index-data.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_index_data_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_index_data_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/index-data\",\n        pathname: \"/api/index-data\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_index_data_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGaW5kZXgtZGF0YSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDaW5kZXgtZGF0YS5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUN3RDtBQUN4RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMscURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHFEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXGluZGV4LWRhdGEuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2luZGV4LWRhdGFcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9pbmRleC1kYXRhXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Findex-data&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cindex-data.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/index-data.js":
/*!*********************************!*\
  !*** ./pages/api/index-data.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nconst COINGECKO = 'https://api.coingecko.com/api/v3/coins/markets' + '?vs_currency=usd&order=market_cap_desc&per_page=50&page=1&sparkline=false'; // reducido a top 50\nconst BINANCE_INFO = 'https://fapi.binance.com/fapi/v1/exchangeInfo';\nconst BINANCE_KLINES = 'https://fapi.binance.com/fapi/v1/klines';\nconst STABLES = new Set([\n    'USDT',\n    'USDC',\n    'BUSD',\n    'DAI',\n    'TUSD',\n    'USDP',\n    'GUSD',\n    'USDN'\n]);\nfunction calcEMA(arr, p) {\n    const k = 2 / (p + 1);\n    return arr.reduce((a, v, i)=>i ? v * k + a * (1 - k) : v, 0);\n}\nfunction calcRSI(arr) {\n    let g = 0, l = 0;\n    for(let i = 1; i < arr.length; i++){\n        const d = arr[i] - arr[i - 1];\n        if (d > 0) g += d;\n        else l -= d;\n    }\n    const ag = g / (arr.length - 1);\n    const al = l / (arr.length - 1) || 1e-6;\n    return 100 - 100 / (1 + ag / al);\n}\nfunction getLastSundayMaxMin(kl) {\n    for(let i = kl.length - 1; i >= 0; i--){\n        const d = new Date(kl[i][0]);\n        if (d.getUTCDay() === 0) return {\n            max: +kl[i][2],\n            min: +kl[i][3]\n        };\n    }\n    const last = kl[kl.length - 1];\n    return {\n        max: +last[2],\n        min: +last[3]\n    };\n}\nfunction computeScore({ price, maxD, minD, ema15, rsi15, ema5, rsi5, rsi4 }) {\n    let s = 1;\n    if (price > minD) s += 3;\n    if (price > maxD) s += 2;\n    if (price < minD) s -= 2;\n    if (rsi15 > 50 && price > ema15) s += 2;\n    if (rsi15 < 50 && price < ema15) s -= 2;\n    if (rsi5 > 70 && price > ema5) s += 1;\n    if (rsi5 < 30 && price < ema5) s -= 1;\n    if (rsi4 < 15) s += 0.5;\n    if (rsi4 > 85) s -= 0.5;\n    return Math.max(1, Math.min(10, s));\n}\nfunction phaseText(s) {\n    if (s <= 3) return 'ðŸ”´ Oversold';\n    if (s < 4.9) return 'ðŸ”´ Bearish Incline';\n    if (s < 6) return 'ðŸŸ  Accumulation';\n    if (s < 8.1) return 'ðŸŸ¡ Bullish Incline';\n    return 'ðŸŸ¢ Overbought';\n}\n// Persistencia en memoria (mientras la lambda estÃ© caliente)\nhandler.prevScores = handler.prevScores || {};\nhandler.prevPhases = handler.prevPhases || {};\nhandler.alerts = handler.alerts || [];\nasync function handler(req, res) {\n    try {\n        const [cg, info] = await Promise.all([\n            fetch(COINGECKO).then((r)=>r.json()),\n            fetch(BINANCE_INFO).then((r)=>r.json())\n        ]);\n        const futureSet = new Set(info.symbols.filter((s)=>s.contractType === 'PERPETUAL' && s.symbol.endsWith('USDT')).map((s)=>s.baseAsset));\n        const assets = cg.filter((c)=>c.symbol && !STABLES.has(c.symbol.toUpperCase())).map((c)=>({\n                sym: c.symbol.toUpperCase(),\n                bin: c.symbol.toUpperCase() + 'USDT',\n                pr: c.current_price\n            })).filter((a)=>futureSet.has(a.sym));\n        const result = [];\n        // Procesar en batches de 10 para limitar concurrencia\n        for(let i = 0; i < assets.length; i += 10){\n            const batch = assets.slice(i, i + 10);\n            const batchData = await Promise.all(batch.map(async (a)=>{\n                try {\n                    const [kl1d, kl15, kl5, kl4] = await Promise.all([\n                        fetch(`${BINANCE_KLINES}?symbol=${a.bin}&interval=1d&limit=10`).then((r)=>r.json()),\n                        fetch(`${BINANCE_KLINES}?symbol=${a.bin}&interval=15m&limit=28`).then((r)=>r.json()),\n                        fetch(`${BINANCE_KLINES}?symbol=${a.bin}&interval=5m&limit=28`).then((r)=>r.json()),\n                        fetch(`${BINANCE_KLINES}?symbol=${a.bin}&interval=4m&limit=15`).then((r)=>r.json())\n                    ]);\n                    const { max, min } = getLastSundayMaxMin(kl1d);\n                    const c15 = kl15.map((x)=>+x[4]), e15 = calcEMA(c15, 28), r15 = calcRSI(c15);\n                    const c5 = kl5.map((x)=>+x[4]), e5 = calcEMA(c5, 28), r5 = calcRSI(c5);\n                    const r4 = calcRSI(kl4.map((x)=>+x[4]));\n                    const sc = computeScore({\n                        price: a.pr,\n                        maxD: max,\n                        minD: min,\n                        ema15: e15,\n                        rsi15: r15,\n                        ema5: e5,\n                        rsi5: r5,\n                        rsi4: r4\n                    });\n                    const ph = phaseText(sc);\n                    const old = handler.prevPhases[a.sym] || ph;\n                    if (old !== ph) {\n                        handler.alerts.unshift({\n                            time: new Date().toLocaleTimeString(),\n                            symbol: a.sym,\n                            oldPhase: old,\n                            newPhase: ph,\n                            price: a.pr,\n                            score: sc.toFixed(2)\n                        });\n                        handler.alerts = handler.alerts.slice(0, 20);\n                    }\n                    const prev = handler.prevScores[a.sym] || 0;\n                    handler.prevScores[a.sym] = sc;\n                    handler.prevPhases[a.sym] = ph;\n                    return {\n                        symbol: a.sym,\n                        price: a.pr.toFixed(6),\n                        prevScore: prev.toFixed(2),\n                        score: sc.toFixed(2),\n                        phase: ph\n                    };\n                } catch  {\n                    return {\n                        symbol: a.sym,\n                        price: 'â€“',\n                        prevScore: 'â€“',\n                        score: 'â€“',\n                        phase: 'NoTrade'\n                    };\n                }\n            }));\n            result.push(...batchData);\n        }\n        res.status(200).json({\n            data: result,\n            alerts: handler.alerts\n        });\n    } catch (err) {\n        res.status(500).json({\n            error: err.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/index-data.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Findex-data&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cindex-data.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();